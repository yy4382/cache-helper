(()=>{async function S(t){return await new Promise((i,s)=>{$httpClient.get(t,async(e,r,n)=>{e&&s(e),i(n)})})}async function p(t,i,s){let e="";e=await S(i),$persistentStore.write(e,t);let r=$persistentStore.read(s);if(!r)r=[],r.push({key:t,update:new Date().toISOString()}),$persistentStore.write(JSON.stringify(r),this.expireInfoKey);else{let n=JSON.parse(r),o=n.find(f=>f.key===t);o?o.update=new Date().toISOString():n.push({key:t,update:new Date().toISOString()}),$persistentStore.write(JSON.stringify(n),this.expireInfoKey)}return e}async function u(t,i,s=3600,e="json.cacheHelper.expireInfo"){let r=$persistentStore.read(e);if(s===-1)return $persistentStore.read(t);if(s===0)return await p(t,i,e);if(!r){let a=$persistentStore.read(t);return a?(r=[],r.push({key:t,update:new Date().toISOString()}),$persistentStore.write(JSON.stringify(r),this.expireInfoKey),a):await p(t,i,e)}let n=JSON.parse(r),o=n.find(a=>a.key===t);if(!o){let a=$persistentStore.read(t);return a?(n.push({key:t,update:new Date().toISOString()}),$persistentStore.write(JSON.stringify(n),this.expireInfoKey),a):await p(t,i,e)}let f=new Date,c=new Date(o.update);return(f-c)/1e3>s?await p(t,i,e):$persistentStore.read(t)}})();
